name: Shopping Cart Action 

on: workflow_dispatch #manual trigger 
permissions:
  issues: write
jobs: 
  Test:
    runs-on: ubuntu-latest
    env: 
      repo: shopping-cart 
    steps: 
      - name: ManualApproval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: testuser
          minimum-approvals: 1
          issue-title: "Deploy to Prod"
          issue-body: "Please approve or deny the deployment to Prod"
          exclude-workflow-initiator-as-approver: false
          additional-approved-words: ''
          additional-denied-words: ''
   
      - name: echo env 
        run: echo  ${{ secrets.DOCKERHUB_USERNAME }}/"$repo":latest 
        
  # TestingCode: 
  #   runs-on: ubuntu-latest  #this runner has install maven by default
  #   steps: 
      
  #     - name: Code Checkout 
  #       uses: actions/checkout@v4 
    
  #     - name: Maven Test 
  #       run: mvn test 

  #     - name: Maven Checkstyle
  #       run: mvn checkstyle:checkstyle 

  #     - name: Install Java 11 
  #       uses: actions/setup-java@v4 
  #       with: 
  #         distribution: 'temurin' 
  #         java-version: '11'
    
  #     - name: Setup SonarQube 
  #       uses: warchant/setup-sonar-scanner@v7 

  #     - name: SonarQube Scan 
  #       run: sonar-scanner 
  #           -Dsonar.host.url=${{ secrets.SONAR_URL }}
  #           -Dsonar.token=${{ secrets.SONAR_TOKEN }}
  #           -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
  #           -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
  #           -Dsonar.sources=src/ 
  #           -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
  #           -Dsonar.java.binaries=target/classes/com/shashi/

  #     - name: SonarQube Quality Gate Check 
  #       id: sonarqube-quality-gate-check 
  #       uses: sonarsource/sonarqube-quality-gate-action@master
  #       timeout-minutes: 5 
  #       env: 
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ secrets.SONAR_URLL }}
  
  # BuildAndPushForTesting:
  #   runs-on: ubuntu-latest 
  #   needs: TestingCode
  #   env: 
  #     DOCKER_REPO: shopping-cart 
  #   steps: 
  #     - name: Code Checkout 
  #       uses: actions/checkout@v4 

  #     - name: Login to Docker Hub 
  #       uses: docker/login-action@v3 
  #       with: 
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and Push docker image to Dockerhub 
  #       uses: docker/build-push-action@v5
  #       with: 
  #         context: ./
  #         push: true 
  #         tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{env.DOCKER_REPO}}:test
  #          # - ${{ secrets.DOCKERHUB_USERNAME }}/${{ DOCKER_REPO }}:${{GITHUB_RUN_NUMBER}}
  
  # DeployToTestEnv:
  #   runs-on: ubuntu-latest 
  #   needs: BuildAndPushForTesting 
  #   env: 
  #     DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  #     DOCKER_REPO: shopping-cart
  #     APP: shopping-cart-app 
  #     APP_PORT: 8081 
      
  #   steps:
  #     - name: Execute SSH commmands on remote server
  #       uses: JimCronqvist/action-ssh@master
  #       with:
  #         hosts: ${{ secrets.TEST_HOST_USER }}@${{secrets.TEST_HOST_IP}}
  #         privateKey: ${{ secrets.TEST_HOST_PRIVATE_KEY }}
  #         command: |
  #           docker stop ${{env.APP}} 
  #           sleep 2
  #           docker pull ${{env.DOCKER_USER }}/${{env.DOCKER_REPO}}:test
  #           sleep 2
  #           docker run --name ${{env.APP}} -d --rm -p ${{env.APP_PORT}}:8080 ${{env.DOCKER_USER }}/${{env.DOCKER_REPO}}:test
            

           
           
           
    
       
    
  
          
       
         



          



        
    
